#
# This file is a Makefile for Tk.  If it has the name "Makefile.in",
# it is a template for a Makefile; to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile).

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

exec_prefix =	/usr/local
prefix =	/usr/local

# Directory in which to install the library of Tk scripts and demos
# (note: you can set the TK_LIBRARY environment variable at run-time to
# override the compiled-in location):
TK_LIBRARY =	@TK_LIBRARY_NAME@

# Directory in which to install the archive libtk.a:
LIB_DIR =	$(exec_prefix)/lib

# The name for the new libtk. Change this name if you do not
# want to install libtk under the "standard" name.
TK_LIB_NAME =	tk

# The directory containing the Tcl sources and headers appropriate
# for this version of Tk ("@TCL_SOURCE@" will be replaced or has already
# been replaced by the configure script):
TCL_DIR =	../@TCL_SOURCE@

# The directory containing the Tk sources and headers
# ("@TK_SOURCE@" will be replaced or has already been replaced
# by the configure script):
TK_DIR =	../@TK_SOURCE@

# A "-I" switch that can be used when compiling to make all the
# X11 include files accessible (the configure script will try to
# set this value and will cause it to be an empty string if the
# include files are accessible via /usr/include).
X11_INCLUDES =	@XINCLUDES@

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = @CFLAGS@

# To turn off the security checks that disallow incoming sends when
# the X server appears to be insecure, reverse the comments on the
# following lines:
SECURITY_FLAGS =
#SECURITY_FLAGS = -DTK_NO_SECURITY

# To disable ANSI-C procedure prototypes reverse the comment characters
# on the following lines:
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE

# To enable memory debugging, reverse the comment characters on the
# following lines.  Warning:  if you enable memory debugging, you must
# do it *everywhere*, including all the code that calls Tcl, and you
# must use ckalloc and ckfree everywhere instead of malloc and free.
MEM_DEBUG_FLAGS =
#MEM_DEBUG_FLAGS = -DTCL_MEM_DEBUG

# To disable kanji handling, reverse the comment characters on the following
# lines.  `KINPUT2' is the name of kanji input server.  Actually, `KINPUT2'
# is the only kanji input server you can choose right now. :-)
# Warning:  if you enable kanji handling for tk, you must enable kanji
# handling for tcl.
KANJI_FLAGS = @KANJI_FLAGS@

# To build with TkPixmap support, adapt the following lines:
#  -DUSE_XPM3         ... xpm3.o    (xpm3 support)
#                         add "-L../libxpm -lXpm" to TKPIXMAP_LIBS
#                         to use a global Xpm lib, remove
#                         -L../libxpm and -I../libxpm
#  -DUSE_GIF          ... gif.o     (gif support)
#                         no additional parameters required 
#  -DUSE_RAW256       ... raw256.o  (raw 256x256 picture support)
#                         no additional parameters required 
#  -DUSE_DPS          ... dpsSupport.o (eps dupport with display postscript)
#                         add "-ldpstk -ldps" to TKPIXMAP_LIBS
#
#  -DUSE_PINFO        ... add the pinfo(n) command
#  -DUSE_UXPM         ... add the uxpm(n) command
#  -DLOAD_PIXMAPS     ... embed pixmaps into executable
#
TKPIXMAP_CFLAGS = @TKPIXMAP_CFLAGS@
TKPIXMAP_OBJS = @TKPIXMAP_OBJS@
TKPIXMAP_LIBS = @TKPIXMAP_LIBS@
TKPIXMAP_LIB = @TKPIXMAP_LIB@
TKPIXMAP_LOCALLIB_OBJS = @TKPIXMAP_LOCALLIB_OBJS@
TKPIXMAP_TKLIB_OBJS = @TKPIXMAP_TKLIB_OBJS@

# To build with TkSteal support, adapt the appropriate lines:
#  -DUSE_XACCESS      ... libTkSteal (tksteal support)
#
TKSTEAL_CFLAGS = @TKSTEAL_CFLAGS@
TKSTEAL_OBJS = @TKSTEAL_OBJS@
TKSTEAL_LIBS = @TKSTEAL_LIBS@
TKSTEAL_LIB = @TKSTEAL_LIB@
TKSTEAL_LOCALLIB_OBJS = @TKSTEAL_LOCALLIB_OBJS@
TKSTEAL_TKLIB_OBJS = @TKSTEAL_TKLIB_OBJS@

# To build with TkMegaWidget support, adapt the following lines:
#  -DUSE_MEGAWIDGET   ... libTkMegaWidget  (megawidget support)
#  -DUSE_DES          ... libdes  (des encryption support)
#
TKMEGAWIDGET_CFLAGS = @TKMEGAWIDGET_CFLAGS@
TKMEGAWIDGET_OBJS = @TKMEGAWIDGET_OBJS@
TKMEGAWIDGET_LIBS = @TKMEGAWIDGET_LIBS@
TKMEGAWIDGET_LIB = @TKMEGAWIDGET_LIB@
TKMEGAWIDGET_LOCALLIB_OBJS = @TKMEGAWIDGET_LOCALLIB_OBJS@
TKMEGAWIDGET_TKLIB_OBJS = @TKMEGAWIDGET_TKLIB_OBJS@

# To build with TkIcon support, adapt the following lines:
#
TKICON_CFLAGS = @TKICON_CFLAGS@
TKICON_OBJS = @TKICON_OBJS@
TKICON_LIBS = @TKICON_LIBS@
TKICON_LIB = @TKICON_LIB@
TKICON_LOCALLIB_OBJS = @TKICON_LOCALLIB_OBJS@
TKICON_TKLIB_OBJS = @TKICON_TKLIB_OBJS@

# To build with TkMobal support, adapt the following lines:
#  -DUSE_MOBAL            ... libTkMobal (TkMobal support)
#
TKMOBAL_CFLAGS = @TKMOBAL_CFLAGS@
TKMOBAL_OBJS = @TKMOBAL_OBJS@
TKMOBAL_LIBS = @TKMOBAL_LIBS@
TKMOBAL_LIB = @TKMOBAL_LIB@
TKMOBAL_LOCALLIB_OBJS = @TKMOBAL_LOCALLIB_OBJS@
TKMOBAL_TKLIB_OBJS = @TKMOBAL_TKLIB_OBJS@

# To build with TkXF support, adapt the following lines:
#  -DUSE_XF            ... libTkXF (TkXF support)
#
TKXF_CFLAGS = @TKXF_CFLAGS@
TKXF_OBJS = @TKXF_OBJS@
TKXF_LIBS = @TKXF_LIBS@
TKXF_LIB = @TKXF_LIB@
TKXF_LOCALLIB_OBJS = @TKXF_LOCALLIB_OBJS@
TKXF_TKLIB_OBJS = @TKXF_TKLIB_OBJS@

# To build with BLT support, adapt the following lines:
#  -DUSE_BLT           ... libBLT (BLT support)
#
BLT_CFLAGS = @BLT_CFLAGS@
BLT_OBJS = @BLT_OBJS@
BLT_LIBS = @BLT_LIBS@
BLT_LIB = @BLT_LIB@

# To build with ITCL support, adapt the following lines:
#  -DUSE_ITCL           ... libitcl (ITCL support)
#
ITCL_CFLAGS = @ITCL_CFLAGS@
ITCL_OBJS = @ITCL_OBJS@
ITCL_LIBS = @ITCL_LIBS@
ITCL_LIB = @ITCL_LIB@

# To build with EXPECT support, adapt the following lines:
#  -DUSE_EXPECT           ... libexpectk (EXPECT support)
#
EXPECT_CFLAGS = @EXPECT_CFLAGS@
EXPECT_OBJS = @EXPECT_OBJS@
EXPECT_LIBS = @EXPECT_LIBS@
EXPECT_LIB = @EXPECT_LIB@

# To build with Extended Tcl support, adapt the following lines:
#  -DTK_EXTENDED       ... libtclx und libtkx (tclX support)
#
EXTENDED_CFLAGS = @EXTENDED_CFLAGS@
EXTENDED_OBJS = @EXTENDED_OBJS@
EXTENDED_LIBS = @EXTENDED_LIBS@
EXTENDED_LIB = @EXTENDED_LIB@

# To build with tcl-dp support, adapt the following lines:
#  -DUSE_TCL_DP       ... libdpnetwork und libdputil (tcl DP support)
#
TCLDP_CFLAGS = @TCLDP_CFLAGS@
TCLDP_OBJS = @TCLDP_OBJS@
TCLDP_LIBS = @TCLDP_LIBS@
TCLDP_LIB = @TCLDP_LIB@

# To build with tcl load support, adapt the following lines:
#  -DUSE_LOAD          ... ../shells/sunos.o (dynamic loading)
#
TCLLOAD_CFLAGS = @TCLLOAD_CFLAGS@
TCLLOAD_OBJS = @TCLLOAD_OBJS@
TCLLOAD_LIBS = @TCLLOAD_LIBS@
TCLLOAD_LIB = @TCLLOAD_LIB@

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

# uncomment the follow line and change it to proper subdirectory if 
# you do not make Tcl7.3 library with gcc.
#GCC_INCLUDE=-I${HOME}/gnu/include

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

AC_FLAGS =		@DEFS@
LD_FLAGS = 		@LDFLAGS@
INSTALL =		@INSTALL@
INSTALL_PROGRAM =	@INSTALL_PROGRAM@
INSTALL_DATA =		@INSTALL_DATA@
RANLIB =		@RANLIB@
LN_S =			@LN_S@
SRC_DIR =		@srcdir@
VPATH =			@srcdir@

LOCAL_LIB_NAME =	$(TK_LIB_NAME)
SHARED_LIBS =

PICFLAGS =		@PICFLAGS@
SHDIR =			@SHDIR@
SHLIBSO =		@SHLIBSO@
F1 = 			[
F2 = 			]

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------

CC =		@CC@
CC_SWITCHES =	${CFLAGS} ${EXTENSION_SWITCHES} -I${SRC_DIR} \
-I${TCL_DIR} -I${TK_DIR} ${GCC_INCLUDE} ${X11_INCLUDES} \
${AC_FLAGS} ${PROTO_FLAGS} ${SECURITY_FLAGS} ${KANJI_FLAGS} \
${MEM_DEBUG_FLAGS} -DTK_LIBRARY=\"${TK_LIBRARY}\"

EXTENSION_SWITCHES = ${TKPIXMAP_CFLAGS} ${EXTENDED_CFLAGS} ${TKICON_CFLAGS} ${TKSTEAL_CFLAGS} ${TKMEGAWIDGET_CFLAGS} ${TKMOBAL_CFLAGS} ${TKXF_CFLAGS} ${BLT_CFLAGS} ${ITCL_CFLAGS} ${EXPECT_CFLAGS} ${TCLDP_CFLAGS} ${TCLLOAD_CFLAGS}

TKLIB_OBJS = ${TKPIXMAP_TKLIB_OBJS} ${TKSTEAL_TKLIB_OBJS} ${TKMEGAWIDGET_TKLIB_OBJS} ${TKICON_TKLIB_OBJS} ${TKMOBAL_TKLIB_OBJS} ${TKXF_TKLIB_OBJS} 

WIDGOBJS = tkButton.o tkEntry.o tkFrame.o tkListbox.o \
	tkMenu.o tkMenubutton.o tkMessage.o tkScale.o \
	tkScrollbar.o

CANVOBJS = tkRectOval.o tkCanvWind.o tkCanvText.o tkCanvPoly.o \
        tkCanvLine.o tkCanvas.o tkCanvArc.o tkCanvBmap.o \
        tkTrig.o tkCanvPs.o

TEXTOBJS = tkText.o tkTextTag.o tkTextIndex.o tkTextDisp.o tkTextBTree.o

KANJIOBJS = @KANJIOBJS@

OBJS =  tkMain.o tkArgv.o $(TEXTOBJS) tkWindow.o $(WIDGOBJS) tkPack.o \
	tkPlace.o $(CANVOBJS) tkConfig.o tk3d.o tkCursor.o tkFont.o tkGC.o \
	tkOption.o tkEvent.o tkCmds.o tkColor.o tkFocus.o tkGrab.o \
	tkSelect.o tkSend.o tkWm.o tkAtom.o tkBind.o tkBitmap.o tkError.o \
	tkGeometry.o tkGet.o tkPreserve.o $(KANJIOBJS) $(TKLIB_OBJS)

all: $(SHLIBSO) lib$(LOCAL_LIB_NAME).a

lib$(LOCAL_LIB_NAME).a: Makefile $(OBJS)
	ar r lib$(LOCAL_LIB_NAME).a *.o
	$(RANLIB) lib$(LOCAL_LIB_NAME).a

$(SHLIBSO): Makefile $(OBJS)
	@SHLIBSO_BLD@

clean:
	-@rm -f libtk* *.o shared/* core errs *~ \#* TAGS *.E a.out errors tktest *.orig $(WISH_NAME)

distclean: clean
	rm -f Makefile

.c.o:
	@SHAREDCC@
	$(CC) -c $(CC_SWITCHES) $<

$(OBJS) tkTest.o: $(TK_DIR)/tk.h $(TK_DIR)/tkInt.h $(TK_DIR)/tkConfig.h
$(WIDGOBJS): $(TK_DIR)/default.h
$(CANVOBJS): $(TK_DIR)/default.h $(TK_DIR)/tkCanvas.h
$(TEXTOBJS): $(TK_DIR)/default.h $(TK_DIR)/tkText.h
